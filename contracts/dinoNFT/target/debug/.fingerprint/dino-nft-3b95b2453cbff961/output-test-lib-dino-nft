{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":6204,"byte_end":6233,"line_start":154,"line_end":154,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        testing_env!(context.build());","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:154:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":6314,"byte_end":6357,"line_start":156,"line_end":156,"column_start":9,"column_end":52,"is_primary":false,"text":[{"text":"        testing_env!(context.is_view(true).build());","highlight_start":9,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:156:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.is_view(true).build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":6587,"byte_end":6616,"line_start":164,"line_end":164,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        testing_env!(context.build());","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:164:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":6763,"byte_end":6792,"line_start":171,"line_end":171,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        testing_env!(context.build());","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:171:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":6878,"byte_end":7067,"line_start":174,"line_end":178,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(MINT_STORAGE_COST)","highlight_start":1,"highlight_end":49},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:174:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(MINT_STORAGE_COST)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":7559,"byte_end":7588,"line_start":191,"line_end":191,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        testing_env!(context.build());","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:191:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":7674,"byte_end":7863,"line_start":194,"line_end":198,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(MINT_STORAGE_COST)","highlight_start":1,"highlight_end":49},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:194:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(MINT_STORAGE_COST)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":7997,"byte_end":8170,"line_start":202,"line_end":206,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(1)","highlight_start":1,"highlight_end":33},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:202:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(1)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":8255,"byte_end":8459,"line_start":209,"line_end":214,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .account_balance(env::account_balance())","highlight_start":1,"highlight_end":53},{"text":"            .is_view(true)","highlight_start":1,"highlight_end":27},{"text":"            .attached_deposit(0)","highlight_start":1,"highlight_end":33},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:209:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .account_balance(env::account_balance())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .is_view(true)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(0)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":9003,"byte_end":9032,"line_start":228,"line_end":228,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        testing_env!(context.build());","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:228:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":9118,"byte_end":9307,"line_start":231,"line_end":235,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(MINT_STORAGE_COST)","highlight_start":1,"highlight_end":49},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:231:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(MINT_STORAGE_COST)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":9471,"byte_end":9664,"line_start":240,"line_end":244,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(150000000000000000000)","highlight_start":1,"highlight_end":53},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:240:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(150000000000000000000)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":9742,"byte_end":9946,"line_start":247,"line_end":252,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .account_balance(env::account_balance())","highlight_start":1,"highlight_end":53},{"text":"            .is_view(true)","highlight_start":1,"highlight_end":27},{"text":"            .attached_deposit(0)","highlight_start":1,"highlight_end":33},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:247:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .account_balance(env::account_balance())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .is_view(true)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(0)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10133,"byte_end":10162,"line_start":259,"line_end":259,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        testing_env!(context.build());","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:259:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10248,"byte_end":10437,"line_start":262,"line_end":266,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(MINT_STORAGE_COST)","highlight_start":1,"highlight_end":49},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:262:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(MINT_STORAGE_COST)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10601,"byte_end":10794,"line_start":271,"line_end":275,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(150000000000000000000)","highlight_start":1,"highlight_end":53},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:271:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(150000000000000000000)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":10901,"byte_end":11074,"line_start":279,"line_end":283,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(1)","highlight_start":1,"highlight_end":33},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:279:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m280\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(1)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11144,"byte_end":11348,"line_start":285,"line_end":290,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .account_balance(env::account_balance())","highlight_start":1,"highlight_end":53},{"text":"            .is_view(true)","highlight_start":1,"highlight_end":27},{"text":"            .attached_deposit(0)","highlight_start":1,"highlight_end":33},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:285:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .account_balance(env::account_balance())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .is_view(true)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(0)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11537,"byte_end":11566,"line_start":297,"line_end":297,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        testing_env!(context.build());","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:297:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        testing_env!(context.build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":11652,"byte_end":11841,"line_start":300,"line_end":304,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(MINT_STORAGE_COST)","highlight_start":1,"highlight_end":49},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:300:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(MINT_STORAGE_COST)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12005,"byte_end":12198,"line_start":309,"line_end":313,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(150000000000000000000)","highlight_start":1,"highlight_end":53},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:309:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(150000000000000000000)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12305,"byte_end":12478,"line_start":317,"line_end":321,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .attached_deposit(1)","highlight_start":1,"highlight_end":33},{"text":"            .predecessor_account_id(accounts(0))","highlight_start":1,"highlight_end":49},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:317:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(1)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .predecessor_account_id(accounts(0))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `MockedBlockchain`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":398,"byte_end":414,"line_start":13,"line_end":13,"column_start":58,"column_end":74,"is_primary":true,"text":[{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":58,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":872,"byte_end":948,"line_start":27,"line_end":27,"column_start":9,"column_end":85,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":9,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1023,"byte_end":1087,"line_start":31,"line_end":31,"column_start":9,"column_end":73,"is_primary":false,"text":[{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":1129,"byte_end":1191,"line_start":34,"line_end":34,"column_start":9,"column_end":71,"is_primary":false,"text":[{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":9,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":12539,"byte_end":12743,"line_start":323,"line_end":328,"column_start":9,"column_end":22,"is_primary":false,"text":[{"text":"        testing_env!(context","highlight_start":9,"highlight_end":29},{"text":"            .storage_usage(env::storage_usage())","highlight_start":1,"highlight_end":49},{"text":"            .account_balance(env::account_balance())","highlight_start":1,"highlight_end":53},{"text":"            .is_view(true)","highlight_start":1,"highlight_end":27},{"text":"            .attached_deposit(0)","highlight_start":1,"highlight_end":33},{"text":"            .build());","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"testing_env!","def_site_span":{"file_name":"/Users/optimusprime/.cargo/registry/src/github.com-1ecc6299db9ec823/near-sdk-3.1.0/src/test_utils/mod.rs","byte_start":217,"byte_end":1201,"line_start":11,"line_end":36,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! testing_env {","highlight_start":1,"highlight_end":27},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr, $promise_results:expr) => {","highlight_start":1,"highlight_end":97},{"text":"        near_sdk::env::set_blockchain_interface(Box::new(MockedBlockchain::new(","highlight_start":1,"highlight_end":80},{"text":"            $context,","highlight_start":1,"highlight_end":22},{"text":"            $config,","highlight_start":1,"highlight_end":21},{"text":"            $fee_config,","highlight_start":1,"highlight_end":25},{"text":"            $promise_results,","highlight_start":1,"highlight_end":30},{"text":"            match near_sdk::env::take_blockchain_interface() {","highlight_start":1,"highlight_end":63},{"text":"                Some(mut bi) => bi.as_mut_mocked_blockchain().unwrap().take_storage(),","highlight_start":1,"highlight_end":87},{"text":"                None => Default::default(),","highlight_start":1,"highlight_end":44},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            $validator,","highlight_start":1,"highlight_end":24},{"text":"            None,","highlight_start":1,"highlight_end":18},{"text":"        )));","highlight_start":1,"highlight_end":13},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr, $config:expr, $fee_config:expr, $validator:expr) => {","highlight_start":1,"highlight_end":74},{"text":"        testing_env!($context, $config, $fee_config, $validator, Default::default());","highlight_start":1,"highlight_end":86},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($context:expr, $config:expr, $fee_config:expr) => {","highlight_start":1,"highlight_end":57},{"text":"        testing_env!($context, $config, $fee_config, Default::default());","highlight_start":1,"highlight_end":74},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($context:expr) => {","highlight_start":1,"highlight_end":25},{"text":"        testing_env!($context, Default::default(), Default::default());","highlight_start":1,"highlight_end":72},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":5082,"byte_end":5082,"line_start":118,"line_end":118,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use near_sdk::test_utils::{accounts, VMContextBuilder};","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use near_sdk::MockedBlockchain;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `MockedBlockchain`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:323:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m323\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        testing_env!(context\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .storage_usage(env::storage_usage())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .account_balance(env::account_balance())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .is_view(true)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .attached_deposit(0)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .build());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `testing_env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse near_sdk::MockedBlockchain;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"aborting due to 23 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 23 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0433`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0433`.\u001b[0m\n"}
